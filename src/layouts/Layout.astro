---
interface Props {
  title: string;
  description?: string;
}

const { title, description = "Daily news summaries powered by AI" } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO -->
    <title>{title} | Vibe News</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    <meta property="og:title" content={`${title} | Vibe News`} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={`${title} | Vibe News`} />
    <meta name="twitter:description" content={description} />
    
    <!-- Dark mode script -->
    <script is:inline>
      // Check for saved theme preference, otherwise use system preference
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
            
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
      
      window.localStorage.setItem('theme', theme);
    </script>
  </head>
  <body class="min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
    <div class="max-w-4xl mx-auto px-4 py-8">
      <header class="mb-8">
        <nav class="flex items-center justify-between">
          <a href="/" class="text-2xl font-bold hover:text-gray-600 dark:hover:text-gray-300">
            üóûÔ∏è Vibe News
          </a>
          <button
            id="theme-toggle"
            class="p-2 text-gray-500 hover:text-gray-900 dark:hover:text-gray-100"
            aria-label="Toggle dark mode"
          >
            <svg
              id="theme-toggle-dark-icon"
              class="w-5 h-5 hidden"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
            </svg>
            <svg
              id="theme-toggle-light-icon"
              class="w-5 h-5 hidden"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                clip-rule="evenodd"
              />
            </svg>
          </button>
        </nav>
      </header>
      <main>
        <slot />
      </main>
      <footer class="mt-16 py-8 text-center text-sm text-gray-500">
        <p>¬© {new Date().getFullYear()} Vibe News. All rights reserved.</p>
      </footer>
    </div>
    
    <script>
      // Dark mode toggle functionality
      const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
      const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
      const themeToggleBtn = document.getElementById('theme-toggle');

      // Show the correct icon
      if (localStorage.getItem('theme') === 'dark') {
        themeToggleLightIcon.classList.remove('hidden');
      } else {
        themeToggleDarkIcon.classList.remove('hidden');
      }

      themeToggleBtn.addEventListener('click', () => {
        // Toggle theme
        document.documentElement.classList.toggle('dark');
        
        // Toggle icons
        themeToggleDarkIcon.classList.toggle('hidden');
        themeToggleLightIcon.classList.toggle('hidden');
        
        // Update localStorage
        const isDark = document.documentElement.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
    </script>
  </body>
</html>

<style>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;
</style> 